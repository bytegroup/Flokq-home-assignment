version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: autoparts-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: autoparts_db
      MYSQL_USER: autoparts_user
      MYSQL_PASSWORD: autoparts_pass
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - autoparts-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: autoparts-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: mysql://autoparts_user:autoparts_pass@mysql:3306/autoparts_db
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 3600
      FRONTEND_URL: http://localhost:3000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - autoparts-network
    #command: >
    #  sh -c "
    #    echo 'Waiting for database...' &&
    #    sleep 10 &&
    #    npx prisma migrate deploy &&
    #    npx prisma db seed &&
    #    npm start
    #  "

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: autoparts-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-super-secret-nextauth-key-change-in-production
    depends_on:
      - backend
    networks:
      - autoparts-network

volumes:
  mysql_data:
    driver: local

networks:
  autoparts-network:
    driver: bridge